add tts/ivr function in pythong, add diaplan here
<include>
 <extension name="simple test">
 <condition field="destination_number" expression="^(9102)$">
        <action application="set" data="tts_engine=flite"/>
        <action application="set" data="tts_voice=kal"/>
        <action application="speak" data="This is flite on FreeSWITCH testing...."/>
        <action application="sleep" data="2000"/>
        <action application="python" data="tts"/>
        <action application="sleep" data="2000"/>
        <action application="hangup"/>
 </condition>
 </extension>
</include>

add python module tts.py
--- BEGIN ---
from freeswitch import *

import speech_recognition as sr
import sys
from os import path

import json
from datetime import datetime


def handler(session,args):
    wav_file = "/tmp/recording.wav"
    consoleLog("info", "using wave file %s to recogn-replay\n" % wav_file)

    consoleLog("info", "tts.py started")
    session.execute("set","tts_engine=flite")
    session.execute("set","tts_voice=kal")
    consoleLog("info", "setup variables")
    consoleLog("info", "start speak")
    session.execute("speak","This is testing for TTS working properly")

    msg = ""
    while "quit" not in msg :
        session.execute("speak","say something, let me guess what you said...")
        rtn = session.recordFile(wav_file, 20, 500, 3);

        r = sr.Recognizer()
        with sr.AudioFile(wav_file) as source:
            audio = r.record(source)  # read the entire audio file

        result = ""
        try:
            result = r.recognize_google(audio)
            consoleLog("info", "call_recogn recogn_file - Google Speech Recognition result : %s\n" % str(result))
        except sr.UnknownValueError:
            consoleLog("info", "call_recog recogn_file - Google Speech Recognition could not understand audio\n")
        except sr.RequestError as e:
            consoleLog("info", "call_recog recogn_file - Could not request results from Google Speech Recognition service; {0}\n".format(e))

        session.execute("speak","you just said something like : " + str(result))
        session.execute("sleep","1000")
        msg = str(result);

--- BEGIN ---
       
       
       <!-- for recording phone call -->
                <action application="set" data="RECORD_TITLE=Recording ${destination_number} ${caller_id_number} ${strftime(%Y-%m-%d %H:%M)}"/>
                <action application="set" data="RECORD_COPYRIGHT=(c) 2011"/>
                <action application="set" data="RECORD_SOFTWARE=FreeSWITCH"/>
                <action application="set" data="RECORD_ARTIST=FreeSWITCH"/>
                <action application="set" data="RECORD_COMMENT=FreeSWITCH"/>
                <action application="set" data="RECORD_DATE=${strftime(%Y-%m-%d %H:%M)}"/>
                <action application="set" data="RECORD_STEREO=true"/>

                <action application="set" data="media_bug_answer_req=true"/>
                <!-- <action application="export" data="execute_on_answer=record_session $${recordings_dir}/${strftime(%Y%m%d%H%M%S)}_${caller_id_number}.wav"/> -->
                <action application="set" data="recording_follow_transfer=true"/>

                <action application="set" data="recording_time=${strftime(%Y-%m-%d-%H-%M-%S)}"/>
                <action application="set" data="recording_file=$${recordings_dir}/archive/${recording_time}_${destination_number}_${caller_id_number}.wav"/>
                <action application="record_session" data="${recording_file}"/>
                <action application="set" data="session_in_hangup_hook=true"/>
                <action application="set" data="api_hangup_hook=python call_recogn"/>
                <action application="python" data="call_recogn"/>




ewogICJ0eXBlIjogInNlcnZpY2VfYWNjb3VudCIsCiAgInByb2plY3RfaWQiOiAibWV0aG9kaWNh
bC10ZWEtMTUwNjAzIiwKICAicHJpdmF0ZV9rZXlfaWQiOiAiOGIxNWFhYzliNWFkNTQ2M2E3NDFh
NzBhMDQ5ZDRlZDdjYzIxMWRjOCIsCiAgInByaXZhdGVfa2V5IjogIi0tLS0tQkVHSU4gUFJJVkFU
RSBLRVktLS0tLVxuTUlJRXZnSUJBREFOQmdrcWhraUc5dzBCQVFFRkFBU0NCS2d3Z2dTa0FnRUFB
b0lCQVFESzBNaCtaVHI5TjlhQ1xucms3RnJ6R2dGd1ZKUFp1ekdpL3dRczhJeWxQd0RTaVVqSTFn
a2lZczFqVTlIVDJXUW9DWEZzelZGS0p2em5OWVxuTWtjVnNKYWFJVklaYVczM0daR2pEUHd0ZkM1
SmhWZzRiTUU5YTdzeld3dE9PK3RDUU5RbjVIMk1RYmNuTFZtNVxuNXhtNXB1cTVaT1BTOUU3bHNI
VC83TXVxcXcxNy9FaCtQbEhWaFFUT0tFUUp3NzVlMENZU0FoTDd4T0xub3c5WlxubzY5R010ZDRw
TnJBL3VmV0h4Y2VrWHBoQlhLSitBRUVYQjBlTmxIK3FzeDV5elZOTjl4RTF1S3RJdnVGcWJUT1xu
NUpzazcyNDBWKzZsV0lJL3N4d25Fd0NqRENBVkp4K1B0NUNZL2dwZkNoVXVmdHZURlVTMk1LL1ZP
eGs4eFZ5d1xua0wwSFQzeTdBZ01CQUFFQ2dnRUFERkVabS9OeDNhYmlkQlU1MjIrRVNBQ2Q1WkRF
UCtBN1FSQU5tcThPNGVrcVxucWJyUGF5bjAvNHdTdDU5cStoRVgxaFVnWTJCWmJRalFvRzZOT3Bm
NnpXbHdudkowSnlsNldyaVRKLy8rbjZCbFxuZHlmRHBJTkNYeUFNVTdmMzFaSXlVQ25rSmZ4bnJ3
MW1BWkF6VTc3N1NqOENSdkZuU1RPcUoxQ3VIYk05b21YWVxuSTR3QUhwZkZUZGo5bUxoWlZybmp6
cTlZYXdHMmVla2VEMHN4TkNILzdSUjBuYzVteXR2cms0cHhuY01nallKZlxub0hXQ3FxYVI2OG1y
bkp3L05NSmVEQVZCajI3RDdlNytLckpVN1p5RlVjNFpoQmZNUHE3b3dZOW8yaXN6cUtLNFxuNWVR
WFhmR0R5VmhkWDlJNkI3aFB5UERsRy9ZYXFNM0JEd2lqMkNHVUlRS0JnUURtMEpQMnliUHQwRlRq
WFpjVlxuSE5maHYySmJOdnREenM5dFg0cktqMDY1Y3lNMXFvTjB4bzRkWFhQcjhBUjlmZVpGM0hy
QWFWTVAxY1Fkb1NvMlxuYVZiVmk0N3I2cFJUQWJSUEZNYVhoYkw2WitxRWVTaEFLOHJvdkxEZXRm
d1hGS0VwUzIxdjRjOTJ1UFZlYVNqZFxuc0FWZkRPK1loSmRkMEttbVRxOUFrVGJZTlFLQmdRRGc4
aGc5Q0x5RGRsaHVNdDRPYmtYTjd4dkpvS0Zqc0NNaVxuMmRzYzJLV1h4dllXSmZ1S0lyQTFPT0dJ
eEpMeWJ1K3lPZEUxbHJTbkh5YUhWYTNmTGVCVXlRVTVuRE5jMUF0Q1xub0owalJadDF0UTA3dUZN
Nk14ZlZ1NnpaQXkrUVdGeXlqNXhnNkFKNE1VTmRld0Y3MHljVnNYR1dHaVU4Wko3UFxuQi9xRDMz
My9Md0tCZ1FDd3l0WnEwemhFVWF5VHNwNEVoK0U3Z3JJOWw3R0IwS2pFNThlUk80OWJNTHVwWVgv
clxuTkNLcWoyZzVNZERlcGs1NCtGWDFoemNlQytoNW9YYUowc20ySzMwL2FxQk5yQ0tGNkMzczVY
V2ZvM1RZSDAwYlxuU2UvVHNLUHhFb2VTempSYlF2RUNIMzRmTzdDRnJocWxJeXdhRC9oOVpDSGtz
KzBkKzJyMUU4VmtlUUtCZ1FEWFxuQ0hjRk9XbkVIZ2l3NTIyQXpBZHNza3VVOWpueGF2cGJvWGls
WGJFR28wcXhwNE9LN0ZnWHVKVll3ZGxiYVpNM1xuZzYrcms3S0VJL0lYNDE2Ly8wSDRxdVdVeWU0
THFpUk5mKzVYUG40N0NtVnBGbTV4TDFCMG4rQyszeDNEMWNSZlxuYVl0cTA3OHdtSjgyS0pVbGdw
ZFZWSGdwcmpxMFBkZldQMkZLV1FaQVB3S0JnR1BlYzFCWkJodFgrcC8ycG5JMlxueWc3TGhQZ3RB
TG1USkhFMHpreHpCR3FHTHhNd1dlRFUxc0xKT2RWaytYWXVJRWZlUERpVm5oZncrWkkwZ1BLZVxu
RHNhMHdiK3VQRlZSN3E5MldZSG9qYkQ1Rlo2bkVUcVBPZlhJdVd4OERZNk9WdmFBeXh1cUNHVEdw
Q0RiTGw1aVxuMDhudU42cmE0M254KzRmbEtaazZMRlNqXG4tLS0tLUVORCBQUklWQVRFIEtFWS0t
LS0tXG4iLAogICJjbGllbnRfZW1haWwiOiAidHJhbnNjcmliZXJAbWV0aG9kaWNhbC10ZWEtMTUw
NjAzLmlhbS5nc2VydmljZWFjY291bnQuY29tIiwKICAiY2xpZW50X2lkIjogIjEwODk1MDIyMTM0
ODg0NDk1ODY2NiIsCiAgImF1dGhfdXJpIjogImh0dHBzOi8vYWNjb3VudHMuZ29vZ2xlLmNvbS9v
L29hdXRoMi9hdXRoIiwKICAidG9rZW5fdXJpIjogImh0dHBzOi8vYWNjb3VudHMuZ29vZ2xlLmNv
bS9vL29hdXRoMi90b2tlbiIsCiAgImF1dGhfcHJvdmlkZXJfeDUwOV9jZXJ0X3VybCI6ICJodHRw
czovL3d3dy5nb29nbGVhcGlzLmNvbS9vYXV0aDIvdjEvY2VydHMiLAogICJjbGllbnRfeDUwOV9j
ZXJ0X3VybCI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9yb2JvdC92MS9tZXRhZGF0YS94
NTA5L3RyYW5zY3JpYmVyJTQwbWV0aG9kaWNhbC10ZWEtMTUwNjAzLmlhbS5nc2VydmljZWFjY291
bnQuY29tIgp9IAo=
